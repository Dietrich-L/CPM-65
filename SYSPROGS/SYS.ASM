;SYS.ASM
;(c) by D. Lausberg

;Installationsprogramm fuer alle Teile des Betriebssystems
;Aufruf   SYS d:filename.ext d: /switch
;Switches   I   BIOS
;	    D   BDOS
;           C   CCP
;           B   BOOT-Sector

;V1.0	30.10.91
;V1.1	24.11.91	some improvements
;V1.2	31.03.95	no disc change on C:
;V1.3	30.12.95	system track on C:
;V1.4	03.07.00	BDOS 2.0 Version
;V1.5	30.04.21	4 Floppies
;V1.6	10.07.21	BIOS length check error, 3k BIOS
VERSION	= $16

;Parameters

PNT	= $0
LENGTH	= $1
ERRNO	= $2
SECBUF	= $3

CCPV	= $DE
BDOS	= $F0
FCB1	= $F6
FCB2	= $F4
DMA	= $FE

TPA	= $200

;ERROR CODES

FILESIZE = $81
NOSWITCH = $82
NOFILENAME = $83
NO_SYSD	= $84

EOF	= $D7

;BDOS COMMANDS

CONIN	= $1
CONOUT	= $2
STROUT	= $9
SELDRV	= $E
OPEN	= $F
RDSEQ	= $14
GETDRV	= $19
BIOSC	= $1A

;BIOS COMMANDS

_CHRIN	= 3
_SETSEC = 11
_WRITE	= 13

;CONTROL CHARACTERS

CR	= $D
LF	= $A
EOT	= $0
SP	= $20

;--------------------------------------------------------

	ORG TPA


SYS	LDA #STARTM		;DISPLAY STARTUP MESSAGE
	LDY #STARTM/256
	JSR PRTSTR

SYS2	JSR INIT		;INITIALIZE
	BCS SYS10
	JSR LOAD		;LOAD FILE
	BCS SYS10
	LDX PNT			;POINTER FOR INDEX
	LDA INDEX,X		;CHECK FOR FOR FILE LENGTH
	CMP LENGTH
	BCS SYS3
	LDA #FILESIZE		;FILE TOO LONG
	BCC SYS1

SYS3	INX
	LDA INDEX,X		;GET POINTER
	STA PNT
	JSR RESDMA		;RESET DMA

	LDY #0
	LDA (FCB2),Y		;CHECK FOR DESTINATION DRIVE
	BEQ SYS6
	CMP #6			;no system area on F: and above
	BCS SYS7
	PHA
	ORA #$40
	STA DRIVE
	PLA
	SEC			;DRIVE-NR. -1
	SBC #1
	LDX #SELDRV		;LOGIN DESTINATION DRIVE
	JSR BDOS
SYS10	BCS SYS1

SYS6	LDA DRIVE
	CMP #'E
	BCS SYS11
	LDA #DEST
	LDY #DEST/256
	JSR XCH_DSK		;CHANGE DESTINATION DISK

SYS11	LDA #0
	STA SECBUF+1		;reset sector nr
	STA SECBUF+2
SYS9	LDA PNT			;calculate starting sector/track
	STA SECBUF
	LDA #SECBUF
	LDY #_SETSEC
	JSR BIOS
	LDY #_WRITE		;WRITE SECTOR
	JSR BIOS
	BCS SYS1
	INC DMA+1		;NEXT BLOCK
	INC PNT			;next sector
	DEC LENGTH
	BPL SYS9

SYS5	LDA #ENDM		;END MESSAGE
	LDY #ENDM/256
	JSR PRTSTR

	LDX #0
	JSR BDOS		;BOOT

SYS7	LDA #NO_SYSD

SYS1	JSR ERROR
	BCS SYS5
	JMP SYS2


;-----  SUBROUTINES  ----------

RESDMA	LDA #HEAP		;SET DMA TO HEAP
	STA DMA
	LDA #HEAP/256
	STA DMA+1
	RTS


LOAD	JSR RESDMA		;LOAD SYSTEM FILE
	LDA #0
	STA LENGTH
	LDX #OPEN
	JSR BDOS		;OPEN FILE
	BCS LOAD1
LOAD3	LDX #RDSEQ		;READ SECTOR
	JSR BDOS
	BCS LOAD2
	INC DMA+1
	INC LENGTH
	BNE LOAD3

LOAD2	CMP #EOF
	BEQ LOAD4
LOAD1	SEC
	RTS

LOAD4	DEC LENGTH		;adjust length
	CLC
	RTS


INIT	LDY #1			;INITIALIZE
	LDA (FCB1),Y		;CHECK FOR FILENAME
	CMP #SP
	BEQ INIT1
	DEY
	CLC
	LDA (FCB1),Y
	BNE INIT6
	LDX #GETDRV		;GET DEFAULT DRIVE
	JSR BDOS
	SEC
INIT6	ADC #$40
	STA DRIVE
	LDA (DMA),Y		;CHECK FOR SWITCH
	STA PNT
INIT3	INY
	CPY PNT
	BCS INIT2
	LDA (DMA),Y
	CMP #'/			;SWITCH?
	BNE INIT3
	INY
	CPY PNT
	BCS INIT2
	LDA (DMA),Y		;GET SWITCH
	LDX #0
INIT4	CMP SWTAB,X
	BEQ INIT5
	INX
	INX
	CPX #INDEX-SWTAB
	BCC INIT4
INIT2	LDA #NOSWITCH
	RTS

INIT1	LDA #NOFILENAME
	SEC
	RTS

INIT5	INX
	LDA SWTAB,X
	STA PNT
	LDA DRIVE
	CMP #'E			;no disc change on E: or above
	BCS INIT7
	LDA #SOURCE
	LDY #SOURCE/256
	JSR XCH_DSK		;CHANGE SOURCE DISK
INIT7	CLC
	RTS


XCH_DSK	JSR PRTSTR
	LDA #XCHGM
	LDY #XCHGM/256		;INSERT DISK
	JSR PRTSTR
	LDY #_CHRIN		;WAIT FOR KEY
	JSR BIOS
	JSR CRLF
	RTS


BIOS	LDX #BIOSC		;BIOS CALL
	JMP BDOS


ERROR	STA ERRNO	;ERROR ROUTINE
	JSR CRLF
	LDA #ERRTAB	;SET CCPV
	STA CCPV
	LDA #ERRTAB/256
	STA CCPV+1
	LDY #0  	;CHECK ERROR CODE
	LDA (CCPV),Y
ERROR1	BEQ ERROR4	;END OF ERROR ROUTINE
	CMP ERRNO
	BEQ ERROR3
ERROR2	JSR INCCPV	;SKIP ERROR MESSAGE
	BNE ERROR2
	JSR INCCPV
	JMP ERROR1

ERROR3	JSR INCCPV
	PHA
	JSR ERRTYP	;PRINT ERROR TYPE
	JSR INCCPV
	LDA CCPV	;PRINT ERROR MESSAGE
	LDY CCPV+1
	JSR PRTSTR
	PLA
	BPL ERROR5
	JSR ASKRTY	;ASK FOR RETRY
	LDA ERRNO
	RTS

ERROR4  JSR UETYP	;UNKNOWN ERROR
ERROR5  SEC
	RTS


ERRTYP  LDY #0  	;PRINT ERROR TYPE
ERRTY1  LSR A   	;SHIFT SOURCE BIT IN C
	BCS ERRTY2
	INY		;X= X+5
	INY
	INY
	INY
	INY
	BNE ERRTY1

ERRTY2  LDA ETYPTB,Y
	BEQ UETYP	;LAST CHR?
	JSR PRTCHR
	INY
	BNE ERRTY2

UETYP   LDA #ERRM1
	LDY #ERRM1/256
	JSR PRTSTR
	LDA ERRNO
	JSR PRTHEX

CRLF	LDA #CRLFM	;PRINTS A NEWLINE
	LDY #CRLFM/256

PRTSTR  LDX #STROUT
	JMP BDOS


PRT2SP  JSR PRTSP
PRTSP   LDA #SP
PRTCHR  LDX #CONOUT	;PRINTS A CHR
	JMP BDOS


INCCPV  INC CCPV	;INC CCPV
	BNE INCCP1
	INC CCPV+1
INCCP1  LDA (CCPV),Y
	RTS


ASKRTY  LDA #RTYMES	;RETRY?
	LDY #RTYMES/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	CMP #'y
	BEQ ASKRT1
	CMP #'Y
	BEQ ASKRT1
	SEC
	RTS

ASKRT1  CLC
	RTS


PRTHEX  PHA		;PRINTS A HEX NUMBER
	LSR A
	LSR A
	LSR A
	LSR A
	JSR PRTNIB	;PRINT NIBBLE
	PLA
	AND #$0F

PRTNIB  CMP #$0A
	BCC PRTNI1
	ADC #6
PRTNI1  ADC #$30
	JSR PRTCHR
	RTS

;======   MESSAGES  ======

ERRM1   DB ' Error $',EOT
RTYMES  DB CR,LF,'Retry  (Y/N) ? ',EOT

ETYPTB  DB 'BIOS',$00,'BDOS',$00,'CCP',$00,$00
	DB 'RSX',$00,$00,'USER',$00

ERRTAB  DB $FD,$81,'Drive not ready',EOT
	DB $F9,$01,'Invalid Drive',EOT
	DB $DD,$82,'File not found',EOT
	DB $D9,$02,'Invalid FCB',EOT
	DB $81,$10,'File too large',EOT
	DB $82,$10,'Switch missing',EOT
	DB $83,$10,'Argument missing',CR,LF
	DB 'Usage:   SYS d:filename.ext d: /switch',CR,LF
	DB 'Switch     I   BIOS',CR,LF
	DB '	       D   BDOS',CR,LF
	DB '           C   CCP',CR,LF
	DB '           B   BOOT-Sector',EOT
	DB $84,$10,'no system area on F: or above',EOT

	DB $00

;-----	TABLES  --------------------------------

SWTAB	DB 'I',0,'D',2,'C',4,'B',6

INDEX	DB 12,13		;BIOS LENGTH, 1. Sector
	DB 8,5			;BDOS LENGTH, 1. Sector
	DB 4,1			;CCP LENGTH, 1. Sector
	DB 1,0			;BOOTSECTOR LENGTH, Sector 0


;MESSAGES

STARTM	DB CR,LF,CR,LF,'SYS V',VERSION/16+$30,'.',VERSION*$1000/$1000+$30
	DB '                  (c) D.Lausberg   1991',CR,LF,EOT
ENDM	DB CR,LF,'SYS finished',CR,LF,EOT
SOURCE	DB CR,LF,'Insert source',EOT
DEST	DB CR,LF,'Insert destination',EOT
XCHGM	DB ' disc to drive '
DRIVE	DB 'B:',CR,LF
	DB CR,LF,'and press any key ',EOT
CRLFM	DB CR,LF,EOT


HEAP

	END

;RENAME.ASM
;(c) by D. Lausberg  1996

;Umbenennung von Filenamen
;Aufruf   RENAME d:filename.ext d:filename.ext /switch
;Switches   Y   Y/N Abfrage nach jedem Filenamen

;V1.0	23.03.96
;V1.1	29.04.21	4 Floppies, extensions corrected

;Parameters

DIRPNT	= $0		;DIR POINTER
DIRPNT1	= $1		;AUXILIARY DIR POINTER
CNT	= $2		;COUNTER
CNT1	= $3
SDRIVE	= $4		;SOURCE DRIVE FOR SELDSK
F_CNT	= $7		;FILE COUNTER
SWITCH	= $D
ERRNO	= $E
PNT	= $F

BUFPNT	= $11		;FILENAME BUFFER POINTER

R_FNAME	= $13		;new filename buffer

CCPV	= $DE
BDOS	= $F0
FCB1	= $F6
FCB2	= $F4
DIRBUF	= $FC
DMA	= $FE

TPA	= $200

;Constants
FCB_EXT	= 12

;ERROR CODES

ABORT	= $81
DRV_NEQ = $82
NO_ARG = $83
NO_FILE	= $84
READY	= $9E

DOUBLE	= $DC
NOTFND	= $DD

;BDOS COMMANDS

CONIN	= $1
CONOUT	= $2
STROUT	= $9
SELDRV	= $E
FIRST	= $11
NEXT	= $12
REN	= $17
GETDRV	= $19
BIOSC	= $1A

;BIOS COMMANDS

_CHRIN	= 3

;PSEUDO OPCODE

BIT_ABS	= $2C

;CONTROL CHARACTERS

CR	= $D
LF	= $A
EOT	= $0
SP	= $20

;--------------------------------------------------------

	ORG TPA


RENAME	LDA #STARTM		;DISPLAY STARTUP MESSAGE
	LDY #STARTM/256
	JSR PRTSTR
	JSR INIT		;INITIALIZE
	BCS RENAMX
	JSR CH_SD
	BCS RENAM2
	JSR GETFIL
	BCS RENAMX
	JSR RESP
RENAM1	LDY #1			;set FCB1 and FCB2
	STY CNT
	LDX #11
RENAM3	LDY #0
	LDA (BUFPNT),Y
	LDY CNT
	STA (FCB1),Y
	LDY #11
	LDA (BUFPNT),Y
	LDY CNT
	STA (FCB2),Y
	INC CNT
	JSR INC_BP
	DEX
	BNE RENAM3
	CLC
	LDA BUFPNT		;BUFPNT=BUFPNT+11
	ADC #11
	STA BUFPNT
	LDA BUFPNT+1
	ADC #0
	STA BUFPNT+1
	LDX #REN
	JSR BDOS
	BCS RENAMX
	DEC F_CNT
	BNE RENAM1
	BEQ RENAM2
RENAMX	JSR ERROR
RENAM2	LDA #ENDM
	LDY #ENDM/256
	JSR PRTSTR
	LDA SDRIVE
	LDX #SELDRV
	JSR BDOS
	LDX #0
	JMP BDOS

;-----  SUBROUTINES  ----------

INIT	LDA #0			;INITIALIZE VARABLES
	LDX #$28
INIT11	STA 0,X
	DEX
	BPL INIT11
	JSR RESP		;RESET BUFFER POINTER
	LDY #0			;SET SOURCE DRIVE
	LDA (FCB1),Y
	BNE INIT6
	LDX #GETDRV		;GET DEFAULT DRIVE
	JSR BDOS
	CLC
	ADC #1
INIT6	STA SDRIVE		;SAVE SOURCE DRIVE
	DEC SDRIVE
	ORA #$40
	STA DRIVE
	LDY #0
	LDA (FCB2),Y		;CHECK FOR DESTINATION DRIVE
	BEQ INIT7
	TAX
	INX
	CPX SDRIVE		;must be equal
	BNE INIT1
INIT7	LDY #0
	LDA (DMA),Y		;CHECK FOR SWITCH
	CMP #$01
	BEQ INIT8
	STA PNT
INIT3	INY
	CPY PNT
	BCS INIT2
	LDA (DMA),Y
	CMP #'/			;SWITCH?
	BNE INIT3
	INY
	CPY PNT
	BCS INIT2
	LDA (DMA),Y		;GET SWITCH
	LDX #0
INIT4	CMP SWTAB,X
	BEQ INIT5
	INX
	INX
	CPX #SWTABX-SWTAB
	BCC INIT4
INIT2	LDA #0
	STA SWITCH
	CLC
	RTS

INIT8	LDA #NO_ARG		;no argument given
	DB BIT_ABS
INIT1	LDA #DRV_NEQ		;drive not equal
	SEC
	RTS

INIT5	INX
	LDA SWTAB,X
	ORA SWITCH
	STA SWITCH
	CLC
	RTS


CH_SD	LDA DRIVE
	CMP #'E
	BCS CH_SD1
	LDA #SOURCE
	LDY #SOURCE/256
	JSR XCH_DSK		;CHANGE SOURCE DISK
CH_SD1	LDA SDRIVE
	LDX #SELDRV
	JSR BDOS
	BCC CH_SDX
	JSR ERROR
	BCC CH_SD1
CH_SDX	RTS


RESP	LDA #BUFFER		;RESET BUFPNT
	STA BUFPNT
	LDA #BUFFER/256
	STA BUFPNT+1
	RTS


XCH_DSK	JSR PRTSTR
	LDA #XCHGM
	LDY #XCHGM/256		;INSERT DISK
	JSR PRTSTR
	LDY #_CHRIN		;WAIT FOR KEY
	JSR BIOS
	JSR CRLF
	CLC
	RTS


GETFIL	LDX #FIRST		;GET FILE LIST TO COPY
	JSR BDOS		;CHECK FOR FILE
	BCC GETFIL1
	JSR ERROR
	BCC GETFIL
	RTS

GETFIL1	STY DIRPNT		;PRINT DIRECTORY ENTRY
	STY DIRPNT1
	TYA			;get extension nr
	CLC
	ADC #FCB_EXT
	TAY
	LDA (DIRBUF),Y
	BNE GETFIL3		;SKIP EXTENSIONS
	LDY DIRPNT
	JSR REN_FN		;store new filename in R_FNAME
	LDA #' '		;print filename
	JSR PRTCHR
	LDA #8
	JSR PRT
	LDA #'.
	JSR PRTCHR
	LDA #3
	JSR PRT
	LDA #MESS1
	LDY #MESS1/256
	JSR PRTSTR
	LDY #$FF		;print new filename
	LDA #8
	JSR PRT_R
	LDA #'.
	JSR PRTCHR
	LDA #3
	JSR PRT_R
	BIT SWITCH		;suppress Y/N question
	BPL GETFIL2
	LDA #MESSAGE
	LDY #MESSAGE/256	
	JSR PRTSTR
	LDX #CONIN		;GET COMMAND KEY
	JSR BDOS
	AND #$5F		;LOWER --> UPPER CASE
	CMP #'E
	BEQ GETFIL9
	CMP #'Y
	BNE GETFIL5
GETFIL2	LDX #11
GETFIL7	INC DIRPNT1
	LDY DIRPNT1
	LDA (DIRBUF),Y
	LDY #0
	STA (BUFPNT),Y
	JSR INC_BP
	DEX
	BNE GETFIL7
GETFIL4	LDA R_FNAME,X		;X=0, Y=0!
	STA (BUFPNT),Y
	JSR INC_BP
	INX
	CPX #11
	BCC GETFIL4
	INC F_CNT
GETFIL5	JSR CRLF
GETFIL3	LDX #NEXT
	JSR BDOS
	BCS GETFIL6
	JMP GETFIL1

GETFIL6	CMP #NOTFND
	BEQ GETFIL9
	SEC
GETFILX	RTS

GETFIL9	LDA F_CNT
	BNE GETFIL8
	LDA #NO_FILE
	SEC
	RTS

GETFIL8	CLC
	RTS


REN_FN	STY CNT			;assemble new filename in R_FNAME
	LDX #0
RENFN1	INC CNT
	LDY CNT
	LDA (DIRBUF),Y		;get original CHR
	STA R_FNAME,X		;save it
	TXA
	TAY
	INY
	LDA (FCB2),Y		;get replacement CHR
	CMP #'?			;is it a ?
	BEQ RENFN2
	STA R_FNAME,X
RENFN2	INX
	CPX #11
	BCC RENFN1
	RTS


INC_BP	INC BUFPNT		;INC buffer pointer
	BNE INC_BPX
	INC BUFPNT+1
INC_BPX	RTS


PRT	STA CNT		;GET A CHR'S FROM DIRBUF
PRT1	INC DIRPNT	;AND PRINT THEM
	LDY DIRPNT
	LDA (DIRBUF),Y
	JSR PRTCHR	;PRINT CHR
	DEC CNT
	BNE PRT1
	RTS


PRT_R	STA CNT		;GET A CHR'S FROM R_FNAME
PRTR1	INY		;AND PRINT THEM
	LDA R_FNAME,Y
	JSR PRTCHR	;PRINT CHR
	DEC CNT
	BNE PRTR1
	RTS


BIOS	LDX #BIOSC		;BIOS CALL
	JMP BDOS


ERROR	STA ERRNO	;ERROR ROUTINE
	JSR CRLF
	LDA #ERRTAB	;SET CCPV
	STA CCPV
	LDA #ERRTAB/256
	STA CCPV+1
	LDY #0  	;CHECK ERROR CODE
	LDA (CCPV),Y
ERROR1	BEQ ERROR4	;END OF ERROR ROUTINE
	CMP ERRNO
	BEQ ERROR3
ERROR2	JSR INCCPV	;SKIP ERROR MESSAGE
	BNE ERROR2
	JSR INCCPV
	JMP ERROR1

ERROR3	JSR INCCPV
	PHA
	JSR ERRTYP	;PRINT ERROR TYPE
	JSR INCCPV
	LDA CCPV	;PRINT ERROR MESSAGE
	LDY CCPV+1
	JSR PRTSTR
	PLA
	BPL ERROR5
	JSR ASKRTY	;ASK FOR RETRY
	LDA ERRNO
	RTS

ERROR4  JSR UETYP	;UNKNOWN ERROR
ERROR5  SEC
	RTS


ERRTYP  LDY #0  	;PRINT ERROR TYPE
ERRTY1  LSR A   	;SHIFT SOURCE BIT IN C
	BCS ERRTY2
	INY		;X= X+5
	INY
	INY
	INY
	INY
	BNE ERRTY1

ERRTY2  LDA ETYPTB,Y
	BEQ UETYP	;LAST CHR?
	JSR PRTCHR
	INY
	BNE ERRTY2

UETYP   LDA #ERRM1
	LDY #ERRM1/256
	JSR PRTSTR
	LDA ERRNO
	JSR PRTHEX

CRLF	LDA #CRLFM	;PRINTS A NEWLINE
	LDY #CRLFM/256

PRTSTR  LDX #STROUT
	JMP BDOS


PRT2SP  JSR PRTSP
PRTSP   LDA #SP
PRTCHR  LDX #CONOUT	;PRINTS A CHR
	JMP BDOS


INCCPV  INC CCPV	;INC CCPV
	BNE INCCP1
	INC CCPV+1
INCCP1  LDA (CCPV),Y
	RTS


ASKRTY  LDA #RTYMES	;RETRY?
	LDY #RTYMES/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	CMP #'y
	BEQ ASKRT1
	CMP #'Y
	BEQ ASKRT1
	SEC
	RTS

ASKRT1  CLC
	RTS


PRTHEX  PHA		;PRINTS A HEX NUMBER
	LSR A
	LSR A
	LSR A
	LSR A
	JSR PRTNIB	;PRINT NIBBLE
	PLA
	AND #$0F

PRTNIB  CMP #$0A
	BCC PRTNI1
	ADC #6
PRTNI1  ADC #$30
	JSR PRTCHR
	RTS

;======   MESSAGES  ======

ERRM1   DB ' Error $',EOT
RTYMES  DB CR,LF,'Retry  (Y/N) ? ',EOT

ETYPTB  DB 'BIOS',$00,'BDOS',$00,'CCP',$00,$00
	DB 'RSX',$00,$00,'USER',$00

ERRTAB  DB $FD,$81,'Drive not ready',EOT
	DB $F9,$01,'Invalid Drive',EOT
	DB $DE,$02,'Directory full',EOT
	DB $DD,$82,'File not found',EOT
	DB $DC,$02,'File exists',EOT
	DB $D9,$02,'Invalid FCB',EOT
	DB $D8,$02,'Disk full',EOT
	DB $D6,$02,'File is R/O',EOT
	DB $81,$10,'*** RENAME aborted ***',EOT
	DB $82,$10,'Target drive is not equal to source drive',EOT
	DB $83,$10,'Argument missing',CR,LF
	DB 'Usage:   RENAME [d:]filename.ext [d:]filename /switch',CR,LF
	DB 'Switch     Y   Y/N request for every filename',CR,LF,EOT
	DB $84,$10,'no file to be renamed',EOT
	DB $00

;-----	TABLES  --------------------------------

SWTAB	DB 'Y',$80,'y',$80
SWTABX

;MESSAGES

MESS1	DB ' --> ',EOT
MESSAGE
	DB '  (^C=abort, E=Exit) Y/N  ',EOT

STARTM	DB CR,LF,CR,LF,'RENAME V1.1                '
	DB '  (c) D.Lausberg   1996',CR,LF,EOT
ENDM	DB CR,LF,CR,LF,'RENAME finished',CR,LF,EOT
SOURCE	DB CR,LF,'Insert',EOT
XCHGM	DB ' disc to drive '
DRIVE	DB 'A: and press any key ',EOT
CRLFM	DB CR,LF,EOT


BUFFER

	END

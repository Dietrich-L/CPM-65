;TYPE.ASM   Ausgabe einer Datei am Bildschirm

;	(c) D.Lausberg
;	V1.0	7.12.90
;	V1.1	8.12.90		TAB handling
;	V1.2	3.11.91		improved disc handling
;	V1.3	31.03.95	no disc change on C:
;	V1.4	26.11.97	EOT on $00
;	V1.5	30.04.21	4 Floppies
;	V1.6	22.03.22	/P option
Version	= $16

;CONSTANTS

L_BLOCK	= 15		;# lines per block for /P

CONIN   = $01
CONOUT  = $02
STROUT  = $09
OPEN    = $0F
READ    = $14
GETDRV	= $19

TAB	= $09
CR      = $0D
LF      = $0A
EOT     = $00
EOTM	= $1A
SP      = $20

TPA     = $0200

DMA     = $FE
FCB1    = $F6
BDOS    = $F0
CCPV    = $DE

POINTER = 0		;BUFFER POINTER
ERRNO   = 1
Z_PNT	= 2		;ZEILEN Cursor f√ºr Tab
SWITCH	= 3		;Bit 7 = /P flag
L_CNT	= 4		;line counter
PNT	= 5

EOF     = $D7
NOFILE	= $81

	ORG TPA

START	LDA #START_MESS
	LDY #START_MESS/256
	JSR PRTSTR
	LDY #1		;CHECK FOR FILENAME
	LDA (FCB1),Y
	CMP #SP
	BEQ TYPE9
	JSR XCH_DSK	;CHANGE DISK
TYPE10	LDX #OPEN
	JSR BDOS
	BCS TYPE4
	LDA #0
	STA POINTER	;RESET POINTERS
	STA Z_PNT
	LDA #L_BLOCK	;set line counter
	STA L_CNT
	JSR SET_SW
TYPE5   LDX #READ
	JSR BDOS
	BCS TYPE6
TYPE1	LDY POINTER	;GET CHR
	LDA (DMA),Y
	BEQ TYPE2
	CMP #EOTM	;IS IT AN EOT
	BEQ TYPE2
	CMP #CR
	BEQ CR_EX
	CMP #LF
	BEQ TYPE3
	CMP #TAB
	BEQ TAB_EX
	INC Z_PNT
	AND #$7F	;MAKE IT PRINTABLE
TYPE3	JSR PRTCHR
TYPE7	INC POINTER
	BNE TYPE1	;NEXT CHR
	BEQ TYPE5	;NEXT BLOCK

TYPE6   CMP #EOF
	BEQ TYPE2
TYPE4   JSR ERROR
	BCC TYPE10
	LDX #0	  	;BOOT
	JMP BDOS

TYPE2	LDA #END_MESS
	LDY #END_MESS/256
	JSR PRTSTR
	LDX #0
	JMP BDOS

TYPE9	LDA #NOFILE
	SEC
	BCS TYPE4


CR_EX	LDX #0		;CR EXECUTE
	STX Z_PNT
	DEC L_CNT
	BPL TYPE3
	LDX #L_BLOCK
	STX L_CNT
	BIT SWITCH
	BPL TYPE3
	PHA
	LDX #CONIN
	JSR BDOS
	PLA
	JMP TYPE3


TAB_EX	INC Z_PNT	;TAB EXECUTE
	LDA #SP
	JSR PRTCHR
	LDA Z_PNT
	AND #%00000111	;8 SPACES
	BNE TAB_EX
	BEQ TYPE7


XCH_DSK	CLC
	LDY #0
	LDA (FCB1),Y
	BNE XCH_DSK1
	LDX #GETDRV
	JSR BDOS
	SEC

XCH_DSK1
	ADC #$40
	STA DRIVE
	CMP #'E
	BCS XCHDSK2
	LDA #XCHGM
	LDY #XCHGM/256		;INSERT DISK
	JSR PRTSTR
	LDX #CONIN		;WAIT FOR KEY
	JSR BDOS
	JSR CRLF
XCHDSK2	CLC
	RTS


SET_SW	LDY #0
	LDA (DMA),Y		;CHECK FOR SWITCH
	STA PNT
SETSW3	INY
	CPY PNT
	BCS SETSW2
	LDA (DMA),Y
	CMP #'/			;SWITCH?
	BNE SETSW3
	INY
	CPY PNT
	BCS SETSW2
	LDA (DMA),Y		;GET SWITCH
	LDX #0
SETSW4	CMP SWTAB,X
	BEQ SETSW5
	INX
	INX
	CPX #SWTABX-SWTAB
	BCC SETSW4
SETSW2	LDA #0
	STA SWITCH
	CLC
	RTS

SETSW5	INX
	LDA SWTAB,X
	ORA SWITCH
	STA SWITCH
	CLC
	RTS

;========= Error Routine ===========

ERROR   STA ERRNO       ;ERROR ROUTINE
	JSR CRLF
	LDA #ERRTAB     ;SET CCPV
	STA CCPV
	LDA #ERRTAB/256
	STA CCPV+1
	LDY #0	 	;CHECK ERROR CODE
	LDA (CCPV),Y
ERROR1  BEQ ERROR4      ;END OF ERROR ROUTINE
	CMP ERRNO
	BEQ ERROR3
ERROR2  JSR INCCPV      ;SKIP ERROR MESSAGE
	BNE ERROR2
	JSR INCCPV
	JMP ERROR1

ERROR3  JSR INCCPV
	PHA
	JSR ERRTYP      ;PRINT ERROR TYPE
	JSR INCCPV
	LDA CCPV	;PRINT ERROR MESSAGE
	LDY CCPV+1
	JSR PRTSTR
	PLA
	BPL ERROR5
	JSR ASKRTY      ;ASK FOR RETRY
	LDA ERRNO
	RTS

ERROR4  JSR UETYP       ;UNKNOWN ERROR
ERROR5  SEC
	RTS


ERRTYP  LDY #0	  	;PRINT ERROR TYPE
ERRTY1  LSR A	   	;SHIFT SOURCE BIT IN C
	BCS ERRTY2
	INY	  	;X= X+5
	INY
	INY
	INY
	INY
	BNE ERRTY1

ERRTY2  LDA ETYPTB,Y
	BEQ UETYP       ;LAST CHR?
	JSR PRTCHR
	INY
	BNE ERRTY2

UETYP   LDA #ERRM1
	LDY #ERRM1/256
	JSR PRTSTR
	LDA ERRNO
	JSR PRTHEX

CRLF    LDA #CRLFM      ;PRINTS A NEWLINE
	LDY #CRLFM/256

PRTSTR  LDX #STROUT
	JMP BDOS


PRT2SP  JSR PRTSP

PRTSP   LDA #SP

PRTCHR  LDX #CONOUT     ;PRINTS A CHR
	JMP BDOS


INCCPV  INC CCPV	;INC CCPV
	BNE INCCP1
	INC CCPV+1
INCCP1  LDA (CCPV),Y
	RTS


ASKRTY  LDA #RTYMES     ;RETRY?
	LDY #RTYMES/256
	JSR PRTSTR
	LDX #CONIN
	JSR BDOS
	CMP #'y
	BEQ ASKRT2
	CMP #'Y
	BNE ASKRT1
ASKRT2  CLC
	RTS
;
ASKRT1  SEC
	RTS
;
;
PRTHEX  PHA	     ;PRINTS A HEX NUMBER
	LSR A
	LSR A
	LSR A
	LSR A
	JSR PRTNIB      ;PRINT NIBBLE
	PLA
	AND #$0F

PRTNIB  CMP #$0A
	BCC PRTNI1
	ADC #6
PRTNI1  ADC #$30
	JSR PRTCHR
	RTS

;--- Tables ---

SWTAB	DB 'P',$80,'p',$80
SWTABX

;= = = = = =   MESSAGES  = = = = = = 

ERRM1   DB ' Error $',EOT
RTYMES  DB CR,LF,'Retry  (Y/N) ? ',EOT
;
ETYPTB  DB 'BIOS',$00,'BDOS',$00,'CCP',$00,$00
	DB 'RSX',$00,$00,'USER',$00

ERRTAB  DB $FD,$81,'Drive not ready',EOT
	DB $F9,$01,'Invalid Drive',EOT
	DB $DD,$82,'File not found',EOT
	DB $D9,$02,'Invalid FCB',EOT
	DB $81,$10,'Filename missing',EOT

	DB $00

CRLFM   DB CR,LF,EOT

START_MESS	DB CR,LF,'TYPE V',VERSION/16+$30,'.',VERSION*$1000/$1000+$30
		DB '      (c) D.Lausberg'
		DB ' 3.11.1991',CR,LF,CR,LF,EOT
END_MESS	DB CR,LF,'*** EOF reached ***',CR,LF,EOT
XCHGM		DB CR,LF,'Insert disc to drive '
DRIVE		DB 'B:',CR,LF,'and press any key ',CR,LF,EOT

	END
